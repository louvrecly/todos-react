{"version":3,"sources":["components/NewTodo/style.module.scss","components/TodoList/style.module.scss","App.module.scss","services/jsonPlaceholderApi.ts","utils/checkSuccessfulStatus.ts","redux/todos/thunks.ts","redux/todos/actions.ts","utils/createUuid.ts","components/NewTodo/index.tsx","components/TodoList/TodoItem/index.tsx","components/TodoList/constant.ts","components/TodoList/index.tsx","redux/styles/reducer.ts","constant.ts","App.tsx","redux/styles/actions.ts","redux/todos/reducer.ts","redux/store.ts","index.tsx","components/TodoList/TodoItem/style.module.scss"],"names":["module","exports","jsonPlaceholderClient","axios","create","baseURL","process","fetchTodos","userId","get","params","checkSuccessfulStatus","status","loadTodos","dispatch","a","statusText","data","type","todos","slice","message","createTodo","newTodo","id","performance","now","createTodoSuccess","NewTodo","props","useState","title","setTitle","busy","setBusy","theme","useSelector","state","styles","useDispatch","className","clsx","classes","input","value","onChange","e","target","button","onClick","completed","disabled","icon","TodoItem","eventTargetFieldGetter","handleInput","key","updatedTodo","todo","updateTodoSuccess","updateTodo","container","checker","checkbox","checked","removeTodoSuccess","removeTodo","displayTypes","all","filter","active","TodoList","displayType","setDisplayType","tiles","Object","keys","map","tile","defaultTheme","initialState","userIds","App","setUserId","useEffect","initTodos","app","header","select","parseInt","option","newTheme","setTheme","rootReducer","combineReducers","action","index","findIndex","splice","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4229422b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-todo\":\"style_new-todo__3oj7X\",\"light\":\"style_light__2A9SL\",\"input\":\"style_input__Jnwh9\",\"dark\":\"style_dark__2Z9o_\",\"button\":\"style_button__1Dp-N\",\"icon\":\"style_icon__3Looj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo-list\":\"style_todo-list__3lqiz\",\"tiles\":\"style_tiles__2ypj_\",\"tile\":\"style_tile__1a4hI\",\"all\":\"style_all__2F5rX\",\"active\":\"style_active__3Elz-\",\"completed\":\"style_completed__4UIlA\",\"todos\":\"style_todos__26v30\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"light\":\"App_light__2ac_u\",\"container\":\"App_container__eSJ6i\",\"header\":\"App_header__2L3DO\",\"select\":\"App_select__6MJ0U\",\"dark\":\"App_dark__22_2O\",\"title\":\"App_title__2oBiX\",\"theme-control\":\"App_theme-control__3GRYS\",\"button\":\"App_button__z3Rot\",\"icon\":\"App_icon__1T5rY\",\"active\":\"App_active__2jQ78\"};","import axios from 'axios';\nimport { Todo } from '../redux/todos/state';\n\nconst jsonPlaceholderClient = axios.create({\n  baseURL: process.env.REACT_APP_JSON_PLACEHOLDER_API\n});\n\n/* Todos endpoints */\nexport function fetchTodos(userId: number = 1) {\n  return jsonPlaceholderClient.get('/todos', {\n    params: { userId }\n  });\n}\n\nexport function postTodo(newTodo: Todo) {\n  return jsonPlaceholderClient.post('/todos', newTodo);\n}\n\nexport function putTodo(updatedTodo: Todo) {\n  return jsonPlaceholderClient.put(`/todos/${updatedTodo.id as number}`, updatedTodo);\n}\n\nexport function deleteTodo(id: number) {\n  return jsonPlaceholderClient.delete(`/todos/${id}`);\n}\n","export default function checkSuccessfulStatus(status: number) {\n  return status >= 200 && status <= 299;\n}\n","import { Dispatch } from \"redux\";\nimport { Todo } from \"./state\";\nimport { createTodoSuccess, failed, ITodosAction, loadTodosSuccess, removeTodoSuccess, updateTodoSuccess } from \"./actions\";\nimport { fetchTodos } from \"../../services/jsonPlaceholderApi\";\nimport checkSuccessfulStatus from \"../../utils/checkSuccessfulStatus\";\nimport createUuid from \"../../utils/createUuid\";\n\nconst limit = 10;\n\nexport function loadTodos(userId: number) {\n  return async (dispatch: Dispatch<ITodosAction>) => {\n    const { status, statusText, data } = await fetchTodos(userId);\n\n    if (checkSuccessfulStatus(status)) dispatch(loadTodosSuccess((data as Array<Todo>).slice(0, limit)));\n    else dispatch(failed('LOAD_TODOS_FAILED', statusText));\n  };\n}\n\nexport function createTodo(newTodo: Todo) {\n  const id = createUuid();\n  return (dispatch: Dispatch<ITodosAction>) => dispatch(createTodoSuccess({ ...newTodo, id }));\n  /* Working code - commented out for performance concern since the Json Placeholder API are faked */\n  // return async (dispatch: Dispatch<ITodosAction>) => {\n  //   const { status, statusText, data } = await postTodo(newTodo);\n\n  //   if (checkSuccessfulStatus(status)) dispatch(createTodoSuccess(data as Todo));\n  //   else dispatch(failed('CREATE_TODO_FAILED', statusText));\n  // };\n}\n\nexport function updateTodo(updatedTodo: Todo) {\n  return (dispatch: Dispatch<ITodosAction>) => dispatch(updateTodoSuccess(updatedTodo));\n  /* Working code - commented out for performance concern since the Json Placeholder API are faked */\n  // return async (dispatch: Dispatch<ITodosAction>) => {\n  //   const { status, statusText, data } = await putTodo(updatedTodo);\n\n  //   if (checkSuccessfulStatus(status)) dispatch(updateTodoSuccess(data as Todo));\n  //   else dispatch(failed('UPDATE_TODO_FAILED', statusText));\n  // };\n}\n\nexport function removeTodo(id: number) {\n  return (dispatch: Dispatch<ITodosAction>) => dispatch(removeTodoSuccess(id));\n  /* Working code - commented out for performance concern since the Json Placeholder API are faked */\n  // return async (dispatch: Dispatch<ITodosAction>) => {\n  //   const { status, statusText } = await deleteTodo(id);\n\n  //   if (checkSuccessfulStatus(status)) dispatch(removeTodoSuccess(id));\n  //   else dispatch(failed('REMOVE_TODO_FAILED', statusText));\n  // };\n}\n","import { Todo } from \"./state\";\n\nexport function loadTodosSuccess(todos: Array<Todo>) {\n  return {\n    type: 'LOAD_TODOS_SUCCESS' as 'LOAD_TODOS_SUCCESS',\n    todos\n  };\n}\n\nexport function createTodoSuccess(newTodo: Todo) {\n  return {\n    type: 'CREATE_TODO_SUCCESS' as 'CREATE_TODO_SUCCESS',\n    newTodo\n  };\n}\n\nexport function updateTodoSuccess(updatedTodo: Todo) {\n  return {\n    type: 'UPDATE_TODO_SUCCESS' as 'UPDATE_TODO_SUCCESS',\n    updatedTodo\n  };\n}\n\nexport function removeTodoSuccess(id: number) {\n  return {\n    type: 'REMOVE_TODO_SUCCESS' as 'REMOVE_TODO_SUCCESS',\n    id\n  };\n}\n\nexport function failed(type: FAILED, message: string) {\n  return {\n    type,\n    message\n  };\n}\n\ntype FAILED = 'LOAD_TODOS_FAILED' | 'CREATE_TODO_FAILED' | 'UPDATE_TODO_FAILED' | 'REMOVE_TODO_FAILED';\n\ntype TodosActionCreators =\n  | typeof loadTodosSuccess\n  | typeof createTodoSuccess\n  | typeof updateTodoSuccess\n  | typeof removeTodoSuccess\n  | typeof failed;\n\n\nexport type ITodosAction = ReturnType<TodosActionCreators>;\n","export default function createUuid() {\n  return performance.now();\n}\n","import React, { ChangeEvent, useState } from 'react'\nimport clsx from 'clsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IRootState } from '../../redux/store';\nimport { createTodo } from '../../redux/todos/thunks';\nimport classes from './style.module.scss';\n\ninterface INewTodoProps {\n  userId: number\n}\n\nconst NewTodo: React.FC<INewTodoProps> = (props: INewTodoProps) => {\n  const [title, setTitle] = useState<string>('');\n  const [busy, setBusy] = useState<boolean>(false);\n\n  const theme = useSelector((state: IRootState) => state.styles.theme)\n\n  const dispatch = useDispatch();\n\n  const handleInput: React.ChangeEventHandler<HTMLInputElement> = (e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  };\n\n  const handleSubmit: React.MouseEventHandler<HTMLButtonElement> = () => {\n    if (!title) return;\n\n    setBusy(true);\n\n    const newTodo = {\n      userId: props.userId,\n      completed: false,\n      title\n    };\n\n    dispatch(createTodo(newTodo));\n\n    setTitle('');\n    setBusy(false);\n  };\n\n  return (\n    <div className={clsx([\n      classes['new-todo'],\n      classes[theme]\n    ])}>\n      <input type=\"text\" className={classes.input} value={title} onChange={handleInput} />\n\n      <button className={classes.button} onClick={handleSubmit} disabled={busy}>\n        <span className={classes.icon}>+</span>\n      </button>\n    </div>\n  )\n};\n\nexport default NewTodo;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\nimport { Todo } from '../../../redux/todos/state';\nimport { removeTodo, updateTodo } from '../../../redux/todos/thunks';\nimport { IRootState } from '../../../redux/store';\nimport classes from './style.module.scss';\n\ninterface ITodoItemProps {\n  todo: Todo\n}\n\ntype FieldKeyType = 'completed' | 'title';\ntype TargetKeyType = 'checked' | 'value';\n\nconst TodoItem: React.FC<ITodoItemProps> = (props: ITodoItemProps) => {\n  const theme = useSelector((state: IRootState) => state.styles.theme)\n  const dispatch = useDispatch();\n\n  const eventTargetFieldGetter = {\n    completed: 'checked',\n    title: 'value'\n  }\n\n  const handleInput = (key: FieldKeyType): React.ChangeEventHandler<HTMLInputElement> => (e: React.ChangeEvent<HTMLInputElement>) => {\n    const updatedTodo = {\n      ...props.todo,\n      [key]: e.target[eventTargetFieldGetter[key] as TargetKeyType]\n    };\n    dispatch(updateTodo(updatedTodo));\n  };\n\n  const handleOnClick = (id: number): React.MouseEventHandler<HTMLButtonElement> => () => {\n    dispatch(removeTodo(id));\n  };\n\n  return (\n    <li className={clsx([\n      classes['todo-item'],\n      classes[theme],\n      props.todo.completed && classes.completed\n    ])}>\n      <div className={classes.container}>\n        <div className={classes.checker}>\n          <input\n            type=\"checkbox\"\n            className={classes.checkbox}\n            checked={props.todo.completed}\n            onChange={handleInput('completed')}\n          />\n        </div>\n\n        <input\n          type=\"text\"\n          className={classes.title}\n          value={props.todo.title}\n          onChange={handleInput('title')}\n        />\n\n        <button className={classes.button} onClick={handleOnClick(props.todo.id as number)}>\n          <span className={classes.icon}>×</span>\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import { Todo } from \"../../redux/todos/state\";\n\nexport type DisplayType = 'all' | 'active' | 'completed';\n\nexport const displayTypes = {\n  all: {\n    title: 'All',\n    filter: () => true\n  },\n  active: {\n    title: 'Active',\n    filter: (todo: Todo) => !todo.completed\n  },\n  completed: {\n    title: 'Completed',\n    filter: (todo: Todo) => todo.completed\n  }\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport TodoItem from './TodoItem';\nimport { Todo } from '../../redux/todos/state';\nimport { DisplayType, displayTypes } from './constant';\nimport classes from './style.module.scss';\n\ninterface ITodoListProps {\n  todos: Array<Todo>\n}\n\nconst TodoList: React.FC<ITodoListProps> = (props: ITodoListProps) => {\n  const [displayType, setDisplayType] = useState<DisplayType>('active');\n\n  return (\n    <div className={classes['todo-list']}>\n      <ul className={classes.tiles}>\n        {(Object.keys(displayTypes) as Array<DisplayType>)\n          .map(key => (\n            <li\n              key={key}\n              className={clsx([\n                classes.tile,\n                key === displayType && classes[key]\n              ])}\n              onClick={() => setDisplayType(key)}\n            >{displayTypes[key].title}</li>\n          ))\n        }\n      </ul>\n\n      <ul className={classes['todos']}>\n        {props.todos\n          .filter(displayTypes[displayType].filter)\n          .map(todo => (\n            <TodoItem key={todo.id} todo={todo} />\n          ))\n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import { IStylesState } from \"./state\";\nimport { IStylesAction } from \"./actions\";\n\nexport const defaultTheme = 'light';\n\nconst initialState: IStylesState = {\n  theme: defaultTheme\n};\n\nexport function stylesReducer(state: IStylesState = initialState, action: IStylesAction): IStylesState {\n  switch (action.type) {\n    case 'SET_THEME':\n      const { theme } = action;\n      return {\n        ...state,\n        theme\n      };\n    default:\n      return state;\n  }\n}\n","export const userIds = [\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10\n];\n","import React, { useState, useEffect, ChangeEvent } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport NewTodo from './components/NewTodo';\nimport TodoList from './components/TodoList';\nimport { Theme } from './redux/styles/state';\nimport { defaultTheme } from './redux/styles/reducer';\nimport { loadTodos } from './redux/todos/thunks';\nimport { IRootState } from './redux/store';\nimport { userIds } from './constant';\nimport { setTheme } from './redux/styles/actions';\nimport classes from './App.module.scss';\n\nconst App: React.FC = () => {\n  const [userId, setUserId] = useState<number>(1); // eslint-disable-line\n  const todos = useSelector((state: IRootState) => state.todos.todos);\n  const theme = useSelector((state: IRootState) => state.styles.theme);\n  const dispatch = useDispatch();\n\n  async function initTodos(userId: number) {\n    dispatch(loadTodos(userId));\n  }\n\n  const handleSelect: React.ChangeEventHandler<HTMLSelectElement> = (e: ChangeEvent<HTMLSelectElement>) => {\n    setUserId(parseInt(e.target.value));\n  };\n\n  const toggleTheme: React.MouseEventHandler<HTMLButtonElement> = () => {\n    let newTheme: Theme;\n    switch (theme) {\n      case 'light':\n        newTheme = 'dark';\n        break;\n      case 'dark':\n        newTheme = 'light';\n        break;\n      default:\n        newTheme = defaultTheme;\n    }\n    dispatch(setTheme(newTheme));\n  };\n\n  useEffect(() => {\n    initTodos(userId);\n  }, [userId]); // eslint-disable-line\n\n  return (\n    <div className={clsx([\n      classes.app,\n      classes[theme]\n    ])}>\n      <div className={classes.container}>\n        <div className={classes.header}>\n          <h1 className={classes.title}>User {userId}'s Todo List</h1>\n\n          <select className={classes.select} value={userId} onChange={handleSelect}>\n            {userIds.map(id => (\n              <option key={id} className={classes.option} value={id}>User {id}</option>\n            ))}\n          </select>\n        </div>\n\n        <NewTodo userId={userId} />\n\n        <TodoList todos={todos} />\n\n        <div className={classes['theme-control']}>\n          <button className={classes.button} onClick={toggleTheme}>\n            <span className={clsx([\n              classes.icon,\n              theme === 'light' && classes.active\n            ])}>🌞</span>\n\n            <span className={clsx([\n              classes.icon,\n              theme === 'dark' && classes.active\n            ])}>🌙</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { Theme } from \"./state\";\n\nexport function setTheme(theme: Theme) {\n  return {\n    type: 'SET_THEME' as 'SET_THEME',\n    theme\n  };\n}\n\ntype StylesActionCreators = typeof setTheme;\n\nexport type IStylesAction = ReturnType<StylesActionCreators>;\n","import { ITodosState } from \"./state\";\nimport { ITodosAction } from \"./actions\";\n\nconst initialState: ITodosState = {\n  todos: []\n};\n\nexport function todosReducer(state: ITodosState = initialState, action: ITodosAction): ITodosState {\n  switch (action.type) {\n    case 'LOAD_TODOS_SUCCESS':\n      {\n        const { todos } = action;\n        return {\n          ...state,\n          todos\n        };\n      }\n    case 'CREATE_TODO_SUCCESS':\n      {\n        const { newTodo } = action;\n        const todos = [newTodo, ...state.todos.slice()];\n        return {\n          ...state,\n          todos\n        };\n      }\n    case 'UPDATE_TODO_SUCCESS':\n      {\n        const { updatedTodo } = action;\n        const todos = state.todos.slice();\n        const index = todos.findIndex(todo => todo.id === updatedTodo.id);\n        todos.splice(index, 1, updatedTodo);\n        return {\n          ...state,\n          todos\n        };\n      }\n    case 'REMOVE_TODO_SUCCESS':\n      {\n        const { id } = action;\n        const todos = state.todos.slice();\n        const index = todos.findIndex(todo => todo.id === id);\n        todos.splice(index, 1);\n        return {\n          ...state,\n          todos\n        };\n      }\n    default:\n      return state;\n  }\n}\n","import { combineReducers, Store, createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { ITodosState } from \"./todos/state\";\nimport { IStylesState } from './styles/state';\nimport { ITodosAction } from \"./todos/actions\";\nimport { IStylesAction } from './styles/actions';\nimport { todosReducer } from './todos/reducer';\nimport { stylesReducer } from './styles/reducer';\n\nexport interface IRootState {\n  todos: ITodosState,\n  styles: IStylesState\n}\n\ntype IRootAction = ITodosAction | IStylesAction;\n\nconst rootReducer = combineReducers<IRootState, IRootAction>({\n  todos: todosReducer as any,\n  styles: stylesReducer as any\n});\n\nconst store: Store<IRootState, IRootAction> = createStore(\n  rootReducer,\n  compose(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport env from './config/dotenv'; // eslint-disable-line\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo-item\":\"style_todo-item__4AvFF\",\"light\":\"style_light__1RkuM\",\"container\":\"style_container__30I1n\",\"title\":\"style_title__3Ciot\",\"dark\":\"style_dark__vYGCT\",\"completed\":\"style_completed__YKbSY\",\"checker\":\"style_checker__1ol5-\",\"checkbox\":\"style_checkbox__3XfiT\",\"button\":\"style_button__1NOf3\",\"icon\":\"style_icon__3NnSb\"};"],"sourceRoot":""}