{"version":3,"sources":["components/NewTodo/style.module.scss","App.module.scss","components/TodoList/TodoItem/style.module.scss","redux/todos/actions.ts","services/jsonPlaceholderApi.ts","utils/checkSuccessfulStatus.ts","redux/todos/thunks.ts","components/NewTodo/index.tsx","components/TodoList/TodoItem/index.tsx","components/TodoList/constant.ts","components/TodoList/index.tsx","App.tsx","redux/todos/reducer.ts","redux/store.ts","index.tsx","components/TodoList/style.module.scss"],"names":["module","exports","createTodoSuccess","newTodo","type","failed","message","jsonPlaceholderClient","axios","create","baseURL","process","fetchTodos","userId","get","params","postTodo","post","checkSuccessfulStatus","status","loadTodos","dispatch","a","statusText","data","todos","slice","NewTodo","props","useState","title","setTitle","busy","setBusy","useDispatch","className","classes","input","value","onChange","e","target","button","onClick","completed","createTodo","disabled","icon","TodoItem","id","eventTargetFieldGetter","handleInput","key","updatedTodo","todo","updateTodoSuccess","updateTodo","clsx","container","checker","checkbox","checked","removeTodoSuccess","removeTodo","displayTypes","all","filter","active","TodoList","displayType","setDisplayType","tiles","Object","keys","map","tile","App","useSelector","state","useEffect","initTodos","app","initialState","rootReducer","combineReducers","action","index","findIndex","splice","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72d09bfc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-todo\":\"style_new-todo__3oj7X\",\"input\":\"style_input__Jnwh9\",\"button\":\"style_button__1Dp-N\",\"icon\":\"style_icon__3Looj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"title\":\"App_title__2oBiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo-item\":\"style_todo-item__4AvFF\",\"completed\":\"style_completed__YKbSY\",\"container\":\"style_container__30I1n\",\"checker\":\"style_checker__1ol5-\",\"title\":\"style_title__3Ciot\",\"checkbox\":\"style_checkbox__3XfiT\",\"button\":\"style_button__1NOf3\",\"icon\":\"style_icon__3NnSb\"};","import { Todo } from \"../../constants/types\";\n\nexport function loadTodosSuccess(todos: Array<Todo>) {\n  return {\n    type: 'LOAD_TODOS_SUCCESS' as 'LOAD_TODOS_SUCCESS',\n    todos\n  };\n}\n\nexport function createTodoSuccess(newTodo: Todo) {\n  return {\n    type: 'CREATE_TODO_SUCCESS' as 'CREATE_TODO_SUCCESS',\n    newTodo\n  };\n}\n\nexport function updateTodoSuccess(updatedTodo: Todo) {\n  return {\n    type: 'UPDATE_TODO_SUCCESS' as 'UPDATE_TODO_SUCCESS',\n    updatedTodo\n  };\n}\n\nexport function removeTodoSuccess(id: number) {\n  return {\n    type: 'REMOVE_TODO_SUCCESS' as 'REMOVE_TODO_SUCCESS',\n    id\n  };\n}\n\nexport function failed(type: FAILED, message: string) {\n  return {\n    type,\n    message\n  };\n}\n\ntype FAILED = 'LOAD_TODOS_FAILED' | 'CREATE_TODO_FAILED' | 'UPDATE_TODO_FAILED' | 'REMOVE_TODO_FAILED';\n\ntype TodosActionCreators =\n  | typeof loadTodosSuccess\n  | typeof createTodoSuccess\n  | typeof updateTodoSuccess\n  | typeof removeTodoSuccess\n  | typeof failed;\n\n\nexport type ITodosAction = ReturnType<TodosActionCreators>;\n","import axios from 'axios';\nimport { Todo } from '../constants/types';\n\nconst jsonPlaceholderClient = axios.create({\n  baseURL: process.env.REACT_APP_JSON_PLACEHOLDER_API\n});\n\n/* Todos endpoints */\nexport function fetchTodos(userId: number = 1) {\n  return jsonPlaceholderClient.get('/todos', {\n    params: { userId }\n  });\n}\n\nexport function postTodo(newTodo: Todo) {\n  return jsonPlaceholderClient.post('/todos', newTodo);\n}\n\nexport function putTodo(updatedTodo: Todo) {\n  return jsonPlaceholderClient.put(`/todos/${updatedTodo.id as number}`, updatedTodo);\n}\n\nexport function deleteTodo(id: number) {\n  return jsonPlaceholderClient.delete(`/todos/${id}`);\n}\n","export default function checkSuccessfulStatus(status: number) {\n  return status >= 200 && status <= 299;\n}\n","import { Dispatch } from \"redux\";\nimport { Todo } from \"../../constants/types\";\nimport { createTodoSuccess, failed, ITodosAction, loadTodosSuccess, removeTodoSuccess, updateTodoSuccess } from \"./actions\";\nimport { fetchTodos, postTodo } from \"../../services/jsonPlaceholderApi\";\nimport checkSuccessfulStatus from \"../../utils/checkSuccessfulStatus\";\n\nconst limit = 10;\n\nexport function loadTodos(userId: number) {\n  return async (dispatch: Dispatch<ITodosAction>) => {\n    const { status, statusText, data } = await fetchTodos(userId);\n\n    if (checkSuccessfulStatus(status)) dispatch(loadTodosSuccess((data as Array<Todo>).slice(0, limit)));\n    else dispatch(failed('LOAD_TODOS_FAILED', statusText));\n  };\n}\n\nexport function createTodo(newTodo: Todo) {\n  return async (dispatch: Dispatch<ITodosAction>) => {\n    const { status, statusText, data } = await postTodo(newTodo);\n\n    if (checkSuccessfulStatus(status)) dispatch(createTodoSuccess(data as Todo));\n    else dispatch(failed('CREATE_TODO_FAILED', statusText));\n  };\n}\n\nexport function updateTodo(updatedTodo: Todo) {\n  return (dispatch: Dispatch<ITodosAction>) => dispatch(updateTodoSuccess(updatedTodo));\n  /* Working code - commented out for performance concern since the Json Placeholder API are faked */\n  // return async (dispatch: Dispatch<ITodosAction>) => {\n  //   const { status, statusText, data } = await putTodo(updatedTodo);\n\n  //   if (checkSuccessfulStatus(status)) dispatch(updateTodoSuccess(data as Todo));\n  //   else dispatch(failed('UPDATE_TODO_FAILED', statusText));\n  // };\n}\n\nexport function removeTodo(id: number) {\n  return (dispatch: Dispatch<ITodosAction>) => dispatch(removeTodoSuccess(id));\n  /* Working code - commented out for performance concern since the Json Placeholder API are faked */\n  // return async (dispatch: Dispatch<ITodosAction>) => {\n  //   const { status, statusText } = await deleteTodo(id);\n\n  //   if (checkSuccessfulStatus(status)) dispatch(removeTodoSuccess(id));\n  //   else dispatch(failed('REMOVE_TODO_FAILED', statusText));\n  // };\n}\n","import React, { ChangeEvent, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { createTodo } from '../../redux/todos/thunks';\nimport classes from './style.module.scss';\n\ninterface INewTodoProps {\n  userId: number\n}\n\nconst NewTodo: React.FC<INewTodoProps> = (props: INewTodoProps) => {\n  const [title, setTitle] = useState<string>('');\n  const [busy, setBusy] = useState<boolean>(false);\n\n  const dispatch = useDispatch();\n\n  const handleInput: React.ChangeEventHandler<HTMLInputElement> = (e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  };\n\n  const handleSubmit: React.MouseEventHandler<HTMLButtonElement> = () => {\n    if (!title) return;\n\n    setBusy(true);\n\n    const newTodo = {\n      userId: props.userId,\n      completed: false,\n      title\n    };\n\n    dispatch(createTodo(newTodo));\n\n    setTitle('');\n    setBusy(false);\n  };\n\n  return (\n    <div className={classes['new-todo']}>\n      <input type=\"text\" className={classes.input} value={title} onChange={handleInput} />\n\n      <button className={classes.button} onClick={handleSubmit} disabled={busy}>\n        <span className={classes.icon}>+</span>\n      </button>\n    </div>\n  )\n};\n\nexport default NewTodo;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport { Todo } from '../../../constants/types';\nimport { removeTodo, updateTodo } from '../../../redux/todos/thunks';\nimport classes from './style.module.scss';\n\ninterface ITodoItemProps {\n  todo: Todo\n}\n\ntype FieldKeyType = 'completed' | 'title';\ntype TargetKeyType = 'checked' | 'value';\n\nconst TodoItem: React.FC<ITodoItemProps> = (props: ITodoItemProps) => {\n  const dispatch = useDispatch();\n\n  const eventTargetFieldGetter = {\n    completed: 'checked',\n    title: 'value'\n  }\n\n  const handleInput = (key: FieldKeyType): React.ChangeEventHandler<HTMLInputElement> => (e: React.ChangeEvent<HTMLInputElement>) => {\n    const updatedTodo = {\n      ...props.todo,\n      [key]: e.target[eventTargetFieldGetter[key] as TargetKeyType]\n    };\n    dispatch(updateTodo(updatedTodo));\n  };\n\n  const handleOnClick = (id: number): React.MouseEventHandler<HTMLButtonElement> => () => {\n    dispatch(removeTodo(id));\n  };\n\n  return (\n    <li className={clsx([\n      classes['todo-item'],\n      props.todo.completed && classes.completed\n    ])}>\n      <div className={classes.container}>\n        <div className={classes.checker}>\n          <input\n            type=\"checkbox\"\n            className={classes.checkbox}\n            checked={props.todo.completed}\n            onChange={handleInput('completed')}\n          />\n        </div>\n\n        <input\n          type=\"text\"\n          className={classes.title}\n          value={props.todo.title}\n          onChange={handleInput('title')}\n        />\n\n        <button className={classes.button} onClick={handleOnClick(props.todo.id as number)}>\n          <span className={classes.icon}>×</span>\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import { Todo } from \"../../constants/types\";\n\nexport type DisplayType = 'all' | 'active' | 'completed';\n\nexport const displayTypes = {\n  all: {\n    title: 'All',\n    filter: () => true\n  },\n  active: {\n    title: 'Active',\n    filter: (todo: Todo) => !todo.completed\n  },\n  completed: {\n    title: 'Completed',\n    filter: (todo: Todo) => todo.completed\n  }\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport TodoItem from './TodoItem';\nimport { Todo } from '../../constants/types';\nimport { DisplayType, displayTypes } from './constant';\nimport classes from './style.module.scss';\n\ninterface ITodoListProps {\n  todos: Array<Todo>\n}\n\nconst TodoList: React.FC<ITodoListProps> = (props: ITodoListProps) => {\n  const [displayType, setDisplayType] = useState<DisplayType>('active');\n\n  return (\n    <div className={classes['todo-list']}>\n      <ul className={classes.tiles}>\n        {(Object.keys(displayTypes) as Array<DisplayType>)\n          .map(key => (\n            <li\n              key={key}\n              className={clsx([\n                classes.tile,\n                key === displayType && classes[key]\n              ])}\n              onClick={() => setDisplayType(key)}\n            >{displayTypes[key].title}</li>\n          ))\n        }\n      </ul>\n\n      <ul className={classes['todos']}>\n        {props.todos\n          .filter(displayTypes[displayType].filter)\n          .map(todo => (\n            <TodoItem key={todo.id} todo={todo} />\n          ))\n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport NewTodo from './components/NewTodo';\nimport TodoList from './components/TodoList';\nimport { loadTodos } from './redux/todos/thunks';\nimport { IRootState } from './redux/store';\nimport classes from './App.module.scss';\n\nconst App: React.FC = () => {\n  const [userId, setUserId] = useState<number>(1); // eslint-disable-line\n  const todos = useSelector((state: IRootState) => state.todos.todos);\n  const dispatch = useDispatch();\n\n  async function initTodos(userId: number) {\n    dispatch(loadTodos(userId));\n  }\n\n  useEffect(() => {\n    initTodos(userId);\n  }, [userId]); // eslint-disable-line\n\n  return (\n    <div className={classes.app}>\n      <h1 className={classes.title}>User {userId}'s Todo List</h1>\n\n      <NewTodo userId={userId} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ITodosState } from \"./state\";\nimport { ITodosAction } from \"./actions\";\n\nconst initialState: ITodosState = {\n  todos: []\n};\n\nexport function todosReducer(state: ITodosState = initialState, action: ITodosAction): ITodosState {\n  switch (action.type) {\n    case 'LOAD_TODOS_SUCCESS':\n      {\n        const { todos } = action;\n        return {\n          ...state,\n          todos\n        };\n      }\n    case 'CREATE_TODO_SUCCESS':\n      {\n        const { newTodo } = action;\n        const todos = [newTodo, ...state.todos.slice()];\n        return {\n          ...state,\n          todos\n        };\n      }\n    case 'UPDATE_TODO_SUCCESS':\n      {\n        const { updatedTodo } = action;\n        const todos = state.todos.slice();\n        const index = todos.findIndex(todo => todo.id === updatedTodo.id);\n        todos.splice(index, 1, updatedTodo);\n        return {\n          ...state,\n          todos\n        };\n      }\n    case 'REMOVE_TODO_SUCCESS':\n      {\n        const { id } = action;\n        const todos = state.todos.slice();\n        const index = todos.findIndex(todo => todo.id === id);\n        todos.splice(index, 1);\n        return {\n          ...state,\n          todos\n        };\n      }\n    default:\n      return state;\n  }\n}\n","import { combineReducers, Store, createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { ITodosState } from \"./todos/state\";\nimport { ITodosAction } from \"./todos/actions\";\nimport { todosReducer } from './todos/reducer';\n\nexport interface IRootState {\n  todos: ITodosState\n}\n\ntype IRootAction = ITodosAction;\n\nconst rootReducer = combineReducers<IRootState, IRootAction>({ todos: todosReducer });\n\nconst store: Store<IRootState, IRootAction> = createStore(\n  rootReducer,\n  compose(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport env from './config/dotenv'; // eslint-disable-line\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo-list\":\"style_todo-list__3lqiz\",\"tiles\":\"style_tiles__2ypj_\",\"tile\":\"style_tile__1a4hI\",\"all\":\"style_all__2F5rX\",\"active\":\"style_active__3Elz-\",\"completed\":\"style_completed__4UIlA\",\"todos\":\"style_todos__26v30\"};"],"sourceRoot":""}